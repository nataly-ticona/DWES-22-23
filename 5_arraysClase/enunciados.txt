1 Jorge (Profe) Funciones: array_walk, array_map, array_filter, array_reduce

$personas = [ ["Jorge", 1], ["Bea", 0], ["Paco", 1], ["Amparo", 0], ];

Utiliza alguna de las funciones para generar un array de cadenas indicando
el nombre de la persona y c√≥mo tratarle con formalidad. Si el valor entero 
detr√°s del nombre es un 1 Hay que poner "Se√±or ", si es 0 hay que poner "Se√±ora "

$resultado = ["Se√±or Jorge", "Se√±ora Bea", "Se√±or Paco", "Se√±ora Amparo"];

--

$comida = [ 0 => ["Banana", 3, 56], 1 => ["Chuleta", 1, 256] 2 => ["Pan", 1, 90] ]

Utiliza la funci√≥n map_reduce para calcular la cantidad de calor√≠as de la comida anterior.

--

Con el array de personas anterior, utiliza el array_filter para sacar un listado de 
Hombre y otro listado de mujeres.

2 Javi ‡∂û, Anabel ‡∂û y Rom√°n ‡∂ûüî™ Funciones: array_intersect, array_search y array_replace. 
Enunciado: Designa dos arrays con varios n√∫meros. 
Algunos de ellos deber√°n coincidir entre ambas arrays. 
A continuaci√≥n: * Crea un tercer array que contenga los n√∫meros en com√∫n de los primeros dos. 
Habr√° posiciones nulas. * Crea un cuarto array con las posiciones que le falten al anterior y un n√∫mero asignado a cada una, y j√∫ntalo con el anterior. 
* Buca el √≠ndice de un valor en el array final (por ejemplo el del valor 13) * 
Finalmente, imprime todos los arrays que has generado para ver los cambios. 


3 Xing , Marcos Funciones: array_replace, array_walk_recursive. Enunciado: Crear una array bidimesional que guarda nombre de usuario y contrase√±a de usuario 1._ con array_walk_recursive ejecuta una funcion predefinida mostrando nombre de usuario y contrase√±a *2._ hacer cambio de contrase√±a usando array_replace.

4 Arturo Fern√°ndez Funcion array_merge

"rojo"); $a2=array("b"=>"a√±il", "c"=>"violeta"); $a3=array("d"=>"verde""f"=>"naranja"); $a4=array("i"=>"azul"); $a5=array("g"=>"azul", "h"=>"blanco"); ?>
Mario, Jason, Daniel Con el siguiente array de productos, crea una lista de la compra en la que puedas seleccionar la cantidad de productos que quieres adquirir y te muestre el precio total por producto y el total de la factura: $productos = [ "naranja" => 1.2, "manzana" => 1.5, "pera" => 1.8, "platano" => 0.8, "kiwi" => 0.75, "macarrones" => 0.5, "arroz" => 0.75, "salchichas" => 1, "patatas_fritas" => 3, "paninis" => 1.5, "leche_6_uds" => 5, "pizza_jamon_serrano" => 2.59, "helado_chocolate" => 2.99 ]; Funciones: array_sum (opcional => array_push)

array_sum: ej: array_sum(array $array): int|float devuelve la suma de los valores de un array.
array_push: ej: array_push(array &$array, mixed ...$values): int a√±ade un elemento a la √∫ltima posici√≥n del array
Alex y Dani

Crea un array con 20 n√∫meros aleatorios. A continuaci√≥n, ord√©nalo, qu√≠tale la primera mitad de los n√∫meros y p√≥nselos al final. Muestra todos los pasos por pantalla.

Tienes que usar las siguientes funciones

array_slice ‚Äî Extract a slice of the array array_push ‚Äî Push one or more elements onto the end of array sort ‚Äî Sorts array in place by values in ascending order.4 rand ‚Äî Generate a random integer

Nacho. Funci√≥n: array_rand array_rand(array $array, int $num = 1): mixed array: El array de entrada. num: Especifica cu√°ntas entradas deber√≠an seleccionarse. Dados dos arrays unidimensionales, uno de tareas[] y otro de personas[], asigna de manera aleatoria una tarea a cada persona. Si ya le echas valor, crea un arraybidimensional de tareas_diarias[dia][tarea] y haz un organigrama donde asignes tareas a cada persona durante la semana

Doryan - Nataly - Antonio Funciones (array_merge, array_replace_recursive, in_array) -Array_merge() enunciado: Tenemos que guardar los datos de 4 arrays de personas(cada persona es $personaN) los datos de cada persona son: nombre,apellido,telefono y correo. Junta todos los array de personas en uno llamado $personas e imprimelos en una tabla.

Array_replace_recursive: $personas=[ "25","22 ","24 ","29 ", "26","23","20","19","26","19","20","23"]; Con el array dado remplaza las edades menores de 23 por un array de colores cada vez que sea asi. hUna vez cambiado los que tengan 26 a√±os se cambiaran por otro array: $p26=["mayor","26"]

Array_splice: hacer una clase con el numero de clase y la zona. Luego en el medio del array coloca el numero de identificacion de 10 ni√±os en una tabla.

in_array: Crea una funci√≥n que reciba como 1¬∫ par√°metro un array, como 2¬∫ par√°metro un valor y como 3¬∫ par√°metro un mensaje de error. La funci√≥n debe usar la funci√≥n in_array para comprobar si el array contiene el valor especificado y si es el caso devolver la posici√≥n del array en el que tiene el valor, de lo contrario debe devolver el mensaje de error especificado (inclu√≠do si el array est√° vac√≠o).

Fausto Obama - Sergio - Henry:
Funciones: - in_array: Permite verificar si una cadena concreta se encuentra en la matriz pasada como par√°metro junto al valor a buscar. Devuelve un dato de tipo Boolean. Estructura: << in_array(mixed $needle, array $haystack, bool $strict = false): bool >>

explode: Permite pasar una cadena o texto a una matriz seg√∫n el delimitador que definamos. Devuelve un array. Estructura: << explode(string $separator, string $string, int $limit = PHP_INT_MAX): array >>

array_unique: Esta funci√≥n permite revisar valores duplicados de una matriz y eliminarlos. Devuelve un array con valores √∫nicos. Estructura: array_unique(array $array, int $flags = SORT_STRING): array

Enunciados:

a) Dado un texto o p√°rrafo concreto:

$parrafo= <<<EOF En la d√©cada de 1920 Satyendra Nath Bose y Albert Einstein publican conjuntamente un art√≠culo cient√≠fico acerca de los fotones de luz y sus propiedades Bose describe ciertas reglas para determinar si dos fotones deber√≠an considerarse id√©nticos o diferentes Esta se llama la condensado' de Bose - Einstein Einstein aplica estas reglas a los √°tomos pregunt√°ndose c√≥mo se comportar√≠an los √°tomos de un gas si se les aplicasen estas reglas EOF;

Verificar si existe una palabra pasada por formulario en el parrafo, y mostrar alguna frase del p√°rrafo que la contenga.
b) Dada una cadena o frase: $frase="Mateo, Marcos, Lucas, Pedro, Max, Philip, Lucer, Robert, Maximiliano, Roberto, Pedro, Wenceslao, Teodoro, Mateo, Felipe, Petra, Lucer, Jose, Armando, Sim√≥n, Nic√©foro, Jose, Felipe";

Eliminar los valores duplicados que puedan existir en la cadena y mostrar la cadena original y sin duplicados.

10 Franco Array_filter En una lista de digitos del 1 al 20, filtrar y mostrar las posiciones de los n√∫meros pares e impares.